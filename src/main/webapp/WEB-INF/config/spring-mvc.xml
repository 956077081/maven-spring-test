<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 自动扫描该包，使SpringMVC认为 包下用了@controller注解的类是控制   -->
    <!--<context:component-scan base-package="com.pht" />-->

    <!--打开 获取父容器 spring容器中的组件扫描  可以关闭context:component-scan 但是必须写在annotation-driven 之前  -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="detectHandlerMethodsInAncestorContexts">
            <value>true</value>
        </property>
    </bean>

    <!--静态资源加载 静态资源加载-->
    <mvc:default-servlet-handler/>
    <!-- 映射器 以及适配器作用 请求参数绑定到控制器  Controller加载 没有该配置时默认加载default-servlet-handler -->
    <mvc:annotation-driven/>

    <!-- 启用spring mvc 注解 -->
    <context:annotation-config/>

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
              <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>


    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
        <property name="resolveLazily" value="true"/>
    </bean>
   <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>




    <!--&lt;!&ndash; 配置ViewResolver 。可用多个ViewResolver 。使用order属性排序。   InternalResourceViewResolver 放在最后&ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">-->
        <!--<property name="order" value="1"></property>-->
        <!--<property name="mediaTypes">-->
            <!--<map>-->
                <!--&lt;!&ndash; 告诉视图解析器，返回的类型为json格式 &ndash;&gt;-->
                <!--<entry key="json" value="application/json" />-->
                <!--<entry key="xml" value="application/xml" />-->
                <!--<entry key="htm" value="text/htm" />-->
            <!--</map>-->
        <!--</property>-->
        <!--<property name="defaultViews">-->
            <!--<list>-->
                <!--&lt;!&ndash; ModelAndView里的数据变成JSON &ndash;&gt;-->
                <!--<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="ignoreAcceptHeader" value="true"></property>-->
    <!--</bean>-->
</beans>